name: Build

on:
  pull_request:
  push:
    branches:
      - main

jobs:
  deb:
    name: Deb package
    env:
      CARGO_DEB_VER: 1.38.2
      DEBIAN_FRONTEND: noninteractive
      PKG_CONFIG_ALLOW_CROSS: 1
    strategy:
      matrix:
        target:
          - "x86_64-unknown-linux-gnu"
    runs-on: ubuntu-22.04

    steps:
      - name: Install common libs
        run: |
          sudo apt-get update
          sudo apt-get install pkg-config libssl-dev lintian  libpqxx-dev libxmlsec1-dev libclang-dev

      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Get Rust toolchain channel
        run: |
          echo "RUST_CHANNEL=$(sed -nrE 's/^channel = "(.*)"$/\1/p' "$GITHUB_WORKSPACE"/rust-toolchain.toml)" >> $GITHUB_ENV

      - name: Install Rust ${{ env.RUST_CHANNEL }}
        uses: dtolnay/rust-toolchain@888c2e1ea69ab0d4330cbf0af1ecc7b68f368cc1 # v1
        with:
          toolchain: ${{ env.RUST_CHANNEL }}
          targets: ${{ matrix.target }}

      - name: Install Cargo Deb
        run: cargo install cargo-deb --vers=${{ env.CARGO_DEB_VER }} --locked

      - name: Create package
        run: cargo deb -p akr --target=${{ matrix.target }}

      - name: Verify package
        run: |
          # do not use exit codes while errors occured
          lintian -v target/${{ matrix.target }}/debian/*.deb || true
      
      - name: Upload asset
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with: 
          name: akr-deb
          path: target/${{ matrix.target }}/debian/*.deb

  rpm:
    name: RPM package
    env:
      CARGO_GENERATE_RPM_VER: 0.7.0
    strategy:
      matrix:
        image:
          - "alvistack/centos-9-stream"
    runs-on: ubuntu-22.04
    container:
      image: ${{ matrix.image }}

    steps:
      - name: Install libs on CentOS
        if: ${{ startsWith(matrix.image, 'centos') }}
        run: |
          yum update -y && yum install -y epel-release && yum install -y gcc make cmake3 gcc-c++ openssl-devel gzip rpmlint
          ln -s /usr/bin/cmake3 /usr/bin/cmake

      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Get Rust toolchain channel
        run: |
          echo "RUST_CHANNEL=$(sed -nrE 's/^channel = "(.*)"$/\1/p' "$GITHUB_WORKSPACE"/rust-toolchain.toml)" >> $GITHUB_ENV

      - name: Install Rust ${{ env.RUST_CHANNEL }}
        uses: dtolnay/rust-toolchain@888c2e1ea69ab0d4330cbf0af1ecc7b68f368cc1 # v1
        with:
          toolchain: ${{ env.RUST_CHANNEL }}

      - name: Delete previous RPM
        run: rm -f target/generate-rpm/*.rpm

      - name: Install Cargo Generate RPM
        run: cargo install cargo-generate-rpm --vers=${{ env.CARGO_GENERATE_RPM_VER }} --locked

      - name: Build binary
        run: cargo build --release

      - name: Remove all symbol and relocation information
        run: strip -s target/release/akr

      - name: Add dist to release
        run: dist=$(rpm --eval %{?dist}); sed -i -e 's/release = "\(.*\)"/release = "\1'$dist'"/g' Cargo.toml

      - name: Create package
        run: cargo generate-rpm -p crates/kr ${{ env.CENTOS_BUILD_FLAGS }}

      - name: Verify package
        run: |
          # do not use exit codes while errors occured
          rpmlint target/generate-rpm/akr-*.rpm || true

      - name: Upload RPM
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: akr-${{ matrix.image == 'alvistack/centos-9-stream' && 'centos-9-stream' || 'unknown' }}
          path: target/generate-rpm/*.rpm
