name: Packaging

on:
  release:
    types:
      - created

jobs:
  deb:
    name: Deb package
    env:
      CARGO_DEB_VER: 2.12.0
      DEBIAN_FRONTEND: noninteractive
      PKG_CONFIG_ALLOW_CROSS: 1
    strategy:
      matrix:
        target: [ 'x86_64-unknown-linux-gnu' ]
    runs-on: ubuntu-22.04
    steps:
      - name: Install common libs
        run: |
          sudo apt-get update
          sudo apt-get install pkg-config libssl-dev lintian  libpqxx-dev libxmlsec1-dev libclang-dev

      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Get Rust toolchain channel
        run: |
          echo "RUST_CHANNEL=$(sed -nrE 's/^channel = "(.*)"$/\1/p' "$GITHUB_WORKSPACE"/rust-toolchain.toml)" >> $GITHUB_ENV

      - name: Install Rust ${{ env.RUST_CHANNEL }}
        uses: dtolnay/rust-toolchain@b3b07ba8b418998c39fb20f53e8b695cdcc8de1b # v1
        with:
          toolchain: ${{ env.RUST_CHANNEL }}
          targets: ${{ matrix.target }}

      - name: Install Cargo Deb
        run: cargo install cargo-deb --vers=${{ env.CARGO_DEB_VER }} --locked

      - name: Create package
        run: cargo deb -p akr --target=${{ matrix.target }} -o akr.deb

      - name: Verify package
        run: |
          # do not use exit codes while errors occured
          lintian -v akr.deb || true

      - name: Upload deb asset to release
        if: ${{ github.event.release.upload_url }}
        env:
          GH_TOKEN: ${{ github.token }}
          TARGET: ${{ matrix.target == 'x86_64-unknown-linux-gnu' && 'amd64' || 'unknown' }}
          VERSION: ${{ github.event.release.tag_name }}
        run: |
          mv akr.deb akr_${VERSION}_${TARGET}.deb
          gh release upload $VERSION akr_${VERSION}_${TARGET}.deb

  rpm:
    name: RPM package
    env:
      CARGO_GENERATE_RPM_VER: 0.16.1
    strategy:
      matrix:
        image: [ 'alvistack/centos-9-stream' ]
    runs-on: ubuntu-22.04
    container:
      image: ${{ matrix.image }}
    steps:
      - name: Install CLI tools
        # DNF4 installation commands
        # https://github.com/cli/cli/blob/trunk/docs/install_linux.md#dnf4
        run: |
          sudo dnf -y install git
          sudo dnf -y install 'dnf-command(config-manager)'
          sudo dnf config-manager --add-repo https://cli.github.com/packages/rpm/gh-cli.repo
          sudo dnf -y install gh --repo gh-cli

      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Get Rust toolchain channel
        run: |
          echo "RUST_CHANNEL=$(sed -nrE 's/^channel = "(.*)"$/\1/p' "$GITHUB_WORKSPACE"/rust-toolchain.toml)" >> $GITHUB_ENV

      - name: Install Rust ${{ env.RUST_CHANNEL }}
        uses: dtolnay/rust-toolchain@b3b07ba8b418998c39fb20f53e8b695cdcc8de1b # v1
        with:
          toolchain: ${{ env.RUST_CHANNEL }}

      - name: Delete previous RPM
        run: rm -f target/generate-rpm/*.rpm

      - name: Install Cargo Generate RPM
        run: cargo install cargo-generate-rpm --vers=${{ env.CARGO_GENERATE_RPM_VER }} --locked

      - name: Build binary
        run: cargo build --release

      - name: Remove all symbol and relocation information
        run: strip -s target/release/akr

      - name: Add dist to release
        run: dist=$(rpm --eval %{?dist}); sed -i -e 's/release = "\(.*\)"/release = "\1'$dist'"/g' Cargo.toml

      - name: Create package
        run: cargo generate-rpm -p crates/kr -o akr.rpm

      - name: Verify package
        run: |
          # do not use exit codes when errors occurred
          sudo rpm -qip akr.rpm || true

      - name: Upload rpm asset to release
        if: ${{ github.event.release.upload_url }}
        env:
          GH_TOKEN: ${{ github.token }}
          IMAGE: ${{ matrix.image == 'alvistack/centos-9-stream' && 'centos-9-stream' || 'unknown' }}
          VERSION: ${{ github.event.release.tag_name }}
        # Marks the workspace as a safe directory to avoid the following error:
        #
        # failed to run git: fatal: detected dubious ownership in repository at '/__w/akr/akr'
        # To add an exception for this directory, call:
        # git config --global --add safe.directory /__w/akr/akr
        run: |
          mv akr.rpm akr_${VERSION}-${IMAGE}.rpm
          git config --global --add safe.directory ${GITHUB_WORKSPACE}
          gh release upload $VERSION akr_${VERSION}-${IMAGE}.rpm